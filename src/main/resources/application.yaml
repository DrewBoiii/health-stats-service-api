spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    hikari:
      minimum-idle: 3
      maximum-pool-size: 10
      pool-name: HealthStatsAPIPool
      leak-detection-threshold: 60000
    transaction:
      default-timeout: 600s
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
  cache:
    cache-names: CacheableApplicationRepository
    caffeine:
      spec: maximumSize=10,expireAfterWrite=10m,recordStats
    covid-countries-cache: maximumSize=5,expireAfterWrite=7d,recordStats
    covid-today-stats-cache: maximumSize=100,expireAfterWrite=1d,recordStats
    hiv-countries-cache: maximumSize=5,expireAfterWrite=7d,recordStats
    hiv-today-stats-cache: maximumSize=100,expireAfterWrite=1d,recordStats
  cassandra:
    schema-action: CREATE_IF_NOT_EXISTS
    keyspace-name: ${CASSANDRA_KEYSPACE}
    contact-points: ${CASSANDRA_CONTACT_POINTS}
    port: ${CASSANDRA_PORT}
    local-datacenter: ${CASSANDRA_LOCAL_DC}
    connection:
      connect-timeout: 60s
      init-query-timeout: 60s
    request:
      timeout: 60s
  kafka:
    admin:
      auto-create: false
  jmx:
    enabled: false
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration
      - org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration
      - org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration
#      - org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration
#      - org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration
#      - org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration
#      - org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration
#      - org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration
#      - org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration
#      - org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration
#      - org.springframework.cloud.client.CommonsClientAutoConfiguration
#      - org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration
#      - org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration
#      - org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration
#      - org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration
#      - org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration
#      - org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration
#      - org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration
#      - org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration
#      - org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration
#      - org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration
#      - org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration
#      - org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

application:
  name: health-stats-service-api
  cache:
    enabled: true
  cassandra:
    enabled: true
  client:
    interceptor:
      covid19:
        api-key: ${HEALTH_STATS_SERVICE_APIKEY}
        api-host: ${HEALTH_STATS_SERVICE_APIHOST}
  kafka:
    enabled: true
    server: ${KAFKA_SERVER}
    topic:
      logs: ${SERVER_LOG_TOPIC}

feign:
  client:
    config:
      covid:
        api:
          url: ${COVID_CLIENT_URL}
          retry-max-attempts: 5
      hiv:
        api:
          url: ${HIV_CLIENT_URL}
          retry-max-attempts: 5

management:
  endpoints.web.exposure.include:
    - '*'
  endpoint.health.show-details: always
  health.circuitbreakers.enabled: true
  health.ratelimiters.enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 10
        permittedNumberOfCallsInHalfOpenState: 10
        failureRateThreshold: 10
        slowCallRateThreshold: 20
        slowCallDurationThreshold: 100ms
        registerHealthIndicator: true
      instances:
        hiv:
          baseConfig: default
        covid:
          baseConfig: default
  ratelimiter:
    instances:
      default:
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 1s
        registerHealthIndicator: true
      covid:
        limitForPeriod: 60
        limitRefreshPeriod: 1m
        timeoutDuration: 2s
        registerHealthIndicator: true
      hiv:
        limitForPeriod: 5
        limitRefreshPeriod: 1s
        timeoutDuration: 2s
        registerHealthIndicator: true

springdoc:
  swagger-ui:
    enabled: false
